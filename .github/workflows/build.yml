name: Build Multi-Platform Apps

on:
  push:
    tags:
      - 'v*'  # 当推送 v1.0.0 这样的tag时触发
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        python-version: ['3.10']

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with PyInstaller (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          python build.py --platform mac

      - name: Build with PyInstaller (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          python build.py --platform windows

      - name: Build with PyInstaller (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          python build.py --platform linux

      - name: Create Release Archive (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          cd dist
          zip -r ../WebPConverter-macOS.zip WebPConverter.app README.txt

      - name: Create Release Archive (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd dist
          7z a ../WebPConverter-Windows.zip WebPConverter.exe README.txt

      - name: Create Release Archive (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd dist
          tar -czf ../WebPConverter-Linux.tar.gz WebPConverter README.txt

      - name: Upload Artifacts (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: WebPConverter-macOS
          path: WebPConverter-macOS.zip

      - name: Upload Artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: WebPConverter-Windows
          path: WebPConverter-Windows.zip

      - name: Upload Artifacts (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: WebPConverter-Linux
          path: WebPConverter-Linux.tar.gz

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            WebPConverter-*.zip
            WebPConverter-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
